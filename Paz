{"cells":[{"cell_type":"code","execution_count":1,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"5VoIu6UeN83-","executionInfo":{"status":"ok","timestamp":1732283709662,"user_tz":-60,"elapsed":15426,"user":{"displayName":"Jon Cavallie Mester","userId":"11099483715591885036"}},"outputId":"b4493b4f-b3e0-43b9-c0cf-da1bfbfde5f7"},"outputs":[{"output_type":"stream","name":"stdout","text":["Collecting git+https://github.com/oarriaga/paz.git\n","  Cloning https://github.com/oarriaga/paz.git to /tmp/pip-req-build-9_j3lx6s\n","  Running command git clone --filter=blob:none --quiet https://github.com/oarriaga/paz.git /tmp/pip-req-build-9_j3lx6s\n","  Resolved https://github.com/oarriaga/paz.git to commit cede0aee7b0ce78357f884b916f96803f1cea202\n","  Preparing metadata (setup.py) ... \u001b[?25l\u001b[?25hdone\n","Requirement already satisfied: opencv-python in /usr/local/lib/python3.10/dist-packages (from pypaz==0.2.5) (4.10.0.84)\n","Requirement already satisfied: tensorflow in /usr/local/lib/python3.10/dist-packages (from pypaz==0.2.5) (2.17.1)\n","Requirement already satisfied: numpy in /usr/local/lib/python3.10/dist-packages (from pypaz==0.2.5) (1.26.4)\n","Requirement already satisfied: absl-py>=1.0.0 in /usr/local/lib/python3.10/dist-packages (from tensorflow->pypaz==0.2.5) (1.4.0)\n","Requirement already satisfied: astunparse>=1.6.0 in /usr/local/lib/python3.10/dist-packages (from tensorflow->pypaz==0.2.5) (1.6.3)\n","Requirement already satisfied: flatbuffers>=24.3.25 in /usr/local/lib/python3.10/dist-packages (from tensorflow->pypaz==0.2.5) (24.3.25)\n","Requirement already satisfied: gast!=0.5.0,!=0.5.1,!=0.5.2,>=0.2.1 in /usr/local/lib/python3.10/dist-packages (from tensorflow->pypaz==0.2.5) (0.6.0)\n","Requirement already satisfied: google-pasta>=0.1.1 in /usr/local/lib/python3.10/dist-packages (from tensorflow->pypaz==0.2.5) (0.2.0)\n","Requirement already satisfied: h5py>=3.10.0 in /usr/local/lib/python3.10/dist-packages (from tensorflow->pypaz==0.2.5) (3.12.1)\n","Requirement already satisfied: libclang>=13.0.0 in /usr/local/lib/python3.10/dist-packages (from tensorflow->pypaz==0.2.5) (18.1.1)\n","Requirement already satisfied: ml-dtypes<0.5.0,>=0.3.1 in /usr/local/lib/python3.10/dist-packages (from tensorflow->pypaz==0.2.5) (0.4.1)\n","Requirement already satisfied: opt-einsum>=2.3.2 in /usr/local/lib/python3.10/dist-packages (from tensorflow->pypaz==0.2.5) (3.4.0)\n","Requirement already satisfied: packaging in /usr/local/lib/python3.10/dist-packages (from tensorflow->pypaz==0.2.5) (24.2)\n","Requirement already satisfied: protobuf!=4.21.0,!=4.21.1,!=4.21.2,!=4.21.3,!=4.21.4,!=4.21.5,<5.0.0dev,>=3.20.3 in /usr/local/lib/python3.10/dist-packages (from tensorflow->pypaz==0.2.5) (4.25.5)\n","Requirement already satisfied: requests<3,>=2.21.0 in /usr/local/lib/python3.10/dist-packages (from tensorflow->pypaz==0.2.5) (2.32.3)\n","Requirement already satisfied: setuptools in /usr/local/lib/python3.10/dist-packages (from tensorflow->pypaz==0.2.5) (75.1.0)\n","Requirement already satisfied: six>=1.12.0 in /usr/local/lib/python3.10/dist-packages (from tensorflow->pypaz==0.2.5) (1.16.0)\n","Requirement already satisfied: termcolor>=1.1.0 in /usr/local/lib/python3.10/dist-packages (from tensorflow->pypaz==0.2.5) (2.5.0)\n","Requirement already satisfied: typing-extensions>=3.6.6 in /usr/local/lib/python3.10/dist-packages (from tensorflow->pypaz==0.2.5) (4.12.2)\n","Requirement already satisfied: wrapt>=1.11.0 in /usr/local/lib/python3.10/dist-packages (from tensorflow->pypaz==0.2.5) (1.16.0)\n","Requirement already satisfied: grpcio<2.0,>=1.24.3 in /usr/local/lib/python3.10/dist-packages (from tensorflow->pypaz==0.2.5) (1.68.0)\n","Requirement already satisfied: tensorboard<2.18,>=2.17 in /usr/local/lib/python3.10/dist-packages (from tensorflow->pypaz==0.2.5) (2.17.1)\n","Requirement already satisfied: keras>=3.2.0 in /usr/local/lib/python3.10/dist-packages (from tensorflow->pypaz==0.2.5) (3.5.0)\n","Requirement already satisfied: tensorflow-io-gcs-filesystem>=0.23.1 in /usr/local/lib/python3.10/dist-packages (from tensorflow->pypaz==0.2.5) (0.37.1)\n","Requirement already satisfied: wheel<1.0,>=0.23.0 in /usr/local/lib/python3.10/dist-packages (from astunparse>=1.6.0->tensorflow->pypaz==0.2.5) (0.45.0)\n","Requirement already satisfied: rich in /usr/local/lib/python3.10/dist-packages (from keras>=3.2.0->tensorflow->pypaz==0.2.5) (13.9.4)\n","Requirement already satisfied: namex in /usr/local/lib/python3.10/dist-packages (from keras>=3.2.0->tensorflow->pypaz==0.2.5) (0.0.8)\n","Requirement already satisfied: optree in /usr/local/lib/python3.10/dist-packages (from keras>=3.2.0->tensorflow->pypaz==0.2.5) (0.13.1)\n","Requirement already satisfied: charset-normalizer<4,>=2 in /usr/local/lib/python3.10/dist-packages (from requests<3,>=2.21.0->tensorflow->pypaz==0.2.5) (3.4.0)\n","Requirement already satisfied: idna<4,>=2.5 in /usr/local/lib/python3.10/dist-packages (from requests<3,>=2.21.0->tensorflow->pypaz==0.2.5) (3.10)\n","Requirement already satisfied: urllib3<3,>=1.21.1 in /usr/local/lib/python3.10/dist-packages (from requests<3,>=2.21.0->tensorflow->pypaz==0.2.5) (2.2.3)\n","Requirement already satisfied: certifi>=2017.4.17 in /usr/local/lib/python3.10/dist-packages (from requests<3,>=2.21.0->tensorflow->pypaz==0.2.5) (2024.8.30)\n","Requirement already satisfied: markdown>=2.6.8 in /usr/local/lib/python3.10/dist-packages (from tensorboard<2.18,>=2.17->tensorflow->pypaz==0.2.5) (3.7)\n","Requirement already satisfied: tensorboard-data-server<0.8.0,>=0.7.0 in /usr/local/lib/python3.10/dist-packages (from tensorboard<2.18,>=2.17->tensorflow->pypaz==0.2.5) (0.7.2)\n","Requirement already satisfied: werkzeug>=1.0.1 in /usr/local/lib/python3.10/dist-packages (from tensorboard<2.18,>=2.17->tensorflow->pypaz==0.2.5) (3.1.3)\n","Requirement already satisfied: MarkupSafe>=2.1.1 in /usr/local/lib/python3.10/dist-packages (from werkzeug>=1.0.1->tensorboard<2.18,>=2.17->tensorflow->pypaz==0.2.5) (3.0.2)\n","Requirement already satisfied: markdown-it-py>=2.2.0 in /usr/local/lib/python3.10/dist-packages (from rich->keras>=3.2.0->tensorflow->pypaz==0.2.5) (3.0.0)\n","Requirement already satisfied: pygments<3.0.0,>=2.13.0 in /usr/local/lib/python3.10/dist-packages (from rich->keras>=3.2.0->tensorflow->pypaz==0.2.5) (2.18.0)\n","Requirement already satisfied: mdurl~=0.1 in /usr/local/lib/python3.10/dist-packages (from markdown-it-py>=2.2.0->rich->keras>=3.2.0->tensorflow->pypaz==0.2.5) (0.1.2)\n","Building wheels for collected packages: pypaz\n","  Building wheel for pypaz (setup.py) ... \u001b[?25l\u001b[?25hdone\n","  Created wheel for pypaz: filename=pypaz-0.2.5-py3-none-any.whl size=197676 sha256=74be59b1572efbb94075a15d2bdb5a1aa199771dc2861643e3edf9c72fed5669\n","  Stored in directory: /tmp/pip-ephem-wheel-cache-9qzzjwke/wheels/f8/10/ed/d5b0ff375186669eb932f1555d3cbd249e69d9108dee20ac6a\n","Successfully built pypaz\n","Installing collected packages: pypaz\n","Successfully installed pypaz-0.2.5\n"]}],"source":["!pip install git+https://github.com/oarriaga/paz.git\n"]},{"cell_type":"code","source":["import cv2 as cv"],"metadata":{"id":"WtvXdjoZaqLJ","executionInfo":{"status":"ok","timestamp":1732283709918,"user_tz":-60,"elapsed":274,"user":{"displayName":"Jon Cavallie Mester","userId":"11099483715591885036"}}},"execution_count":2,"outputs":[]},{"cell_type":"code","execution_count":3,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"iu0QHczcOZtH","executionInfo":{"status":"ok","timestamp":1732283754832,"user_tz":-60,"elapsed":17156,"user":{"displayName":"Jon Cavallie Mester","userId":"11099483715591885036"}},"outputId":"a648fbe2-6e25-4a2a-d237-df23ca67e636"},"outputs":[{"output_type":"stream","name":"stdout","text":["Downloading data from https://github.com/oarriaga/altamira-data/releases/download/v0.1/SSD512_COCO-COCO_weights.hdf5\n","\u001b[1m144306248/144306248\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m4s\u001b[0m 0us/step\n","Loading /root/.keras/paz/models/SSD512_COCO-COCO_weights.hdf5 model weights\n"]}],"source":["import cv2\n","import numpy as np\n","import time\n","from paz.applications import SSD512COCO, SSD300VOC, HaarCascadeFrontalFace\n","from google.colab.patches import cv2_imshow\n","import tensorflow as tf\n","gpus = tf.config.experimental.list_physical_devices('GPU')\n","if gpus:\n","    try:\n","        tf.config.experimental.set_memory_growth(gpus[0], True)\n","    except RuntimeError as e:\n","        print(e)\n","#tf.debugging.set_log_device_placement(True)\n","#print(\"Num GPUs Available: \", len(tf.config.list_physical_devices('GPU')))\n","#print(\"Is TensorFlow using GPU? \", tf.test.is_gpu_available())\n","\n","def load_model(model_name=\"SSD512COCO\"):\n","    if model_name == \"SSD512COCO\":\n","        return SSD512COCO()  # Default model\n","    else:\n","        print(\"Error: Model not supported.\")\n","        return None\n","\n","detect = load_model(\"SSD512COCO\")\n","def process_image(input_path):\n","    image = cv2.imread(input_path)\n","    with tf.device('/GPU:0'):\n","      start_time = time.time()\n","      detect(image)\n","      return image\n"]},{"cell_type":"code","source":["import timeit\n","import pandas as pd\n","import numpy as np\n","\n","def benchmark_detect(detect_function, img_path, number=500, repeat=7):\n","    \"\"\"\n","    Benchmarks the detect function by measuring the execution time over a number of iterations.\n","    Returns a list of execution times in milliseconds.\n","    \"\"\"\n","    times = timeit.repeat(\n","        stmt='process_image(\"desk.jpg\")',\n","        setup='from __main__ import process_image',\n","        repeat=repeat,  # Number of times the timing loop is repeated\n","        number=number   # Number of executions per timing loop\n","    )\n","    # Convert total time to per-execution time in milliseconds\n","    per_execution_times = [t / number * 1000 for t in times]\n","    return per_execution_times\n","\n","number = 10\n","\n","repeat = 100  # Number of times the timing loop is repeated\n","\n","# Run the benchmark\n","execution_times = benchmark_detect(process_image, \"desk.jpg\", number=number, repeat=repeat)\n","\n","# Replace 'FrameworkName' with the actual name of the framework\n","framework_name = 'PAZ'\n","\n","df = pd.DataFrame({\n","    'Framework': [framework_name] * len(execution_times),\n","    'ExecutionTime': execution_times\n","})\n"],"metadata":{"id":"tMwaSm18KF-R","executionInfo":{"status":"ok","timestamp":1732283953475,"user_tz":-60,"elapsed":172115,"user":{"displayName":"Jon Cavallie Mester","userId":"11099483715591885036"}}},"execution_count":4,"outputs":[]},{"cell_type":"code","source":["# Option 1: Save to Google Drive\n","from google.colab import drive\n","drive.mount('/content/drive')\n","\n","csv_path = f'/content/drive/MyDrive/{framework_name}_execution_times.csv'\n","df.to_csv(csv_path, index=False)\n","print(f'Data saved to {csv_path}')\n","\n","# Option 2: Download the CSV file directly\n","df.to_csv(f'{framework_name}_execution_times.csv', index=False)\n","from google.colab import files\n","files.download(f'{framework_name}_execution_times.csv')\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":53},"id":"Meba49WPLjiN","executionInfo":{"status":"ok","timestamp":1732284173175,"user_tz":-60,"elapsed":25112,"user":{"displayName":"Jon Cavallie Mester","userId":"11099483715591885036"}},"outputId":"91642f5b-bc42-4b23-e00e-5fc55858dee7"},"execution_count":5,"outputs":[{"output_type":"stream","name":"stdout","text":["Mounted at /content/drive\n","Data saved to /content/drive/MyDrive/PAZ_execution_times.csv\n"]},{"output_type":"display_data","data":{"text/plain":["<IPython.core.display.Javascript object>"],"application/javascript":["\n","    async function download(id, filename, size) {\n","      if (!google.colab.kernel.accessAllowed) {\n","        return;\n","      }\n","      const div = document.createElement('div');\n","      const label = document.createElement('label');\n","      label.textContent = `Downloading \"${filename}\": `;\n","      div.appendChild(label);\n","      const progress = document.createElement('progress');\n","      progress.max = size;\n","      div.appendChild(progress);\n","      document.body.appendChild(div);\n","\n","      const buffers = [];\n","      let downloaded = 0;\n","\n","      const channel = await google.colab.kernel.comms.open(id);\n","      // Send a message to notify the kernel that we're ready.\n","      channel.send({})\n","\n","      for await (const message of channel.messages) {\n","        // Send a message to notify the kernel that we're ready.\n","        channel.send({})\n","        if (message.buffers) {\n","          for (const buffer of message.buffers) {\n","            buffers.push(buffer);\n","            downloaded += buffer.byteLength;\n","            progress.value = downloaded;\n","          }\n","        }\n","      }\n","      const blob = new Blob(buffers, {type: 'application/binary'});\n","      const a = document.createElement('a');\n","      a.href = window.URL.createObjectURL(blob);\n","      a.download = filename;\n","      div.appendChild(a);\n","      a.click();\n","      div.remove();\n","    }\n","  "]},"metadata":{}},{"output_type":"display_data","data":{"text/plain":["<IPython.core.display.Javascript object>"],"application/javascript":["download(\"download_fd59b93f-32cc-421f-a3f7-1471aebef3ec\", \"PAZ_execution_times.csv\", 2293)"]},"metadata":{}}]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":706},"id":"oy7mqsKQO5FL","executionInfo":{"status":"error","timestamp":1731600391214,"user_tz":-60,"elapsed":264,"user":{"displayName":"Jon Cavallie Mester","userId":"11099483715591885036"}},"outputId":"ca334552-5331-4fd6-b94e-88e7ade74ebc"},"outputs":[{"output_type":"error","ename":"ValueError","evalue":"Cannot convert '512' to a shape.","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mValueError\u001b[0m                                Traceback (most recent call last)","\u001b[0;32m<ipython-input-8-0aa366b98194>\u001b[0m in \u001b[0;36m<cell line: 3>\u001b[0;34m()\u001b[0m\n\u001b[1;32m      1\u001b[0m \u001b[0;32mfrom\u001b[0m \u001b[0mpaz\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mmodels\u001b[0m \u001b[0;32mimport\u001b[0m \u001b[0mSSD512\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      2\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m----> 3\u001b[0;31m \u001b[0mmodel\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mSSD512\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m","\u001b[0;32m/usr/local/lib/python3.10/dist-packages/paz/models/detection/ssd512.py\u001b[0m in \u001b[0;36mSSD512\u001b[0;34m(num_classes, base_weights, head_weights, input_shape, num_priors, l2_loss, return_base, trainable_base)\u001b[0m\n\u001b[1;32m    114\u001b[0m                      \u001b[0mtrainable\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mtrainable_base\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    115\u001b[0m                      name='conv4_3')(conv4_2)\n\u001b[0;32m--> 116\u001b[0;31m     \u001b[0mconv4_3_norm\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mConv2DNormalization\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;36m20\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mname\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;34m'branch_1'\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mconv4_3\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    117\u001b[0m     pool4 = MaxPooling2D(pool_size=(2, 2), strides=(2, 2),\n\u001b[1;32m    118\u001b[0m                          padding='same')(conv4_3)\n","\u001b[0;32m/usr/local/lib/python3.10/dist-packages/keras/src/utils/traceback_utils.py\u001b[0m in \u001b[0;36merror_handler\u001b[0;34m(*args, **kwargs)\u001b[0m\n\u001b[1;32m    120\u001b[0m             \u001b[0;31m# To get the full stack trace, call:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    121\u001b[0m             \u001b[0;31m# `keras.config.disable_traceback_filtering()`\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 122\u001b[0;31m             \u001b[0;32mraise\u001b[0m \u001b[0me\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mwith_traceback\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mfiltered_tb\u001b[0m\u001b[0;34m)\u001b[0m \u001b[0;32mfrom\u001b[0m \u001b[0;32mNone\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    123\u001b[0m         \u001b[0;32mfinally\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    124\u001b[0m             \u001b[0;32mdel\u001b[0m \u001b[0mfiltered_tb\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.10/dist-packages/paz/models/layers.py\u001b[0m in \u001b[0;36mbuild\u001b[0;34m(self, input_shape)\u001b[0m\n\u001b[1;32m     26\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     27\u001b[0m     \u001b[0;32mdef\u001b[0m \u001b[0mbuild\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0minput_shape\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m---> 28\u001b[0;31m         self.gamma = self.add_weight(\n\u001b[0m\u001b[1;32m     29\u001b[0m             \u001b[0mname\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;34m'gamma'\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mshape\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0minput_shape\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0maxis\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     30\u001b[0m             initializer=Constant(self.scale), trainable=True)\n","\u001b[0;31mValueError\u001b[0m: Cannot convert '512' to a shape."]}],"source":["from paz.models import SSD512\n","\n","model = SSD512()"]},{"cell_type":"code","source":[],"metadata":{"id":"Su2kW62ya0St"},"execution_count":null,"outputs":[]}],"metadata":{"accelerator":"GPU","colab":{"gpuType":"T4","provenance":[],"authorship_tag":"ABX9TyMRZCDSpKnn9khguEtaE+Xg"},"kernelspec":{"display_name":"Python 3","name":"python3"},"language_info":{"name":"python"}},"nbformat":4,"nbformat_minor":0}